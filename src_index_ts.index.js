/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["src_index_ts"],{

/***/ "./RobotoMono-Regular.ttf":
/*!********************************!*\
  !*** ./RobotoMono-Regular.ttf ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./node_modules/arraybuffer-loader/lib/to-array-buffer.js */ \"./node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"\")\n\n//# sourceURL=webpack:///./RobotoMono-Regular.ttf?");

/***/ }),

/***/ "../examples/bf.mosaic":
/*!*****************************!*\
  !*** ../examples/bf.mosaic ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"a$\\n\\n# Read the BF input\\n[\\n  i a$\\n  \\n  a$  A$\\n  \\n  a_ ..  a_ a$\\n]\\n\\nA$  ..\\n\\n\\n# Initialize the tape and instruction pointers\\n.. .. .. .. .. .. .. .. .. a_    .. .. .. .. .. .. .. .. .. a_\\n.. .. .. .. .. .. .. .. .. ..    .. .. .. .. .. .. .. .. .. !^\\n.. .. .. .. .. .. .. .. .. ..    .. .. .. .. .. .. .. .. Mv ..\\n.. .. .. .. .. .. .. .. .. ..    m0 m0 m0 m0 m0 m0 m0 m0 M< ..\\n\\n# Main loop\\n[\\n  \\n# `+` instruction\\n[\\n  a+ __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n    Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    m_ M< #*  M_ M< ..\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n  \\n  [\\n    M0  m1\\n    \\n    m_ M1  M_ m0\\n\\n    .. M1  .. m0\\n  ]\\n\\n  . # debug\\n]\\n\\n# `-` instruction\\n[\\n  a- __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n    Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    m_ M< #*  M_ M< ..\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n  \\n  [\\n    M1  m0\\n    \\n    m_ M0  M_ m1\\n\\n    .. M0  .. m1\\n  ]\\n  \\n  . # debug\\n]\\n\\n# `>` instruction\\n[\\n  a> __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n    Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    M< #*  .. ..\\n    .. ..  M< ..\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n\\n  .. .. .. .. .. .. .. .. M<   m0 m0 m0 m0 m0 m0 m0 m0 M<\\n  \\n  . # debug\\n]\\n\\n# `<` instruction\\n[\\n  a< __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n    Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    .. ..  M< ..\\n    M< #*  .. ..\\n\\n    Mv ..  Mv ..\\n    M< #*  M< ..\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n\\n  .. .. .. .. .. .. .. .. M<   m0 m0 m0 m0 m0 m0 m0 m0 M<\\n  \\n  . # debug\\n]\\n\\n# `[` instruction\\n[\\n  a[ __   __ __\\n  !^ ..   j^ !^\\n  .. ..   @* ..\\n\\n  [\\n\\t  Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    M< #*  M< $*\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n\\n  m0 m0 m0 m0 m0 m0 m0 m0 M< $*    m0 m0 m0 m0 m0 m0 m0 m0 M< #*\\n\\n  $*  ..\\n\\n  [\\n    Mv #*  Mv @*\\n\\n    ..  #*\\n    #*  ..\\n  ]\\n\\n  [\\n    j^ !^  J^ #^\\n    @* ..  .. ..\\n\\n    @* ..  .. @*\\n  ]\\n\\n  [\\n    a+ __  __ __\\n    #^ ..  .. #^\\n    \\n    a- __  __ __\\n    #^ ..  .. #^\\n    \\n    a< __  __ __\\n    #^ ..  .. #^\\n    \\n    a> __  __ __\\n    #^ ..  .. #^\\n\\n    a, __  __ __\\n    #^ ..  .. #^\\n    \\n    a. __  __ __\\n    #^ ..  .. #^\\n    \\n    a[ __  __ __\\n    #^ ..  j^ #^\\n  ]\\n\\n  [\\n    a] __   __ __\\n    #^ ..   @* #^\\n\\n    [\\n      .. @*  @* ..\\n    ]\\n\\n    j^ @*  .. ..\\n\\n    J^ @*  .. @*\\n\\n    [\\n      @* ..  .. @*\\n    ]\\n\\n    @* #^  .. !^\\n  ]\\n\\n  . # debug\\n]\\n\\n# `]` instruction\\n[\\n  a] __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n\\t  Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    M< #*  M< $*\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n\\n  m0 m0 m0 m0 m0 m0 m0 m0 M< $*       __ __ __ __ __ __ __ __ M< %0\\n\\n  $*  %1\\n\\n  [\\n    Mv %0  Mv $0\\n\\n    ..  %0\\n    %0  ..\\n  ]\\n\\n  [\\n    Mv %1  Mv $1\\n\\n    ..  %1\\n    %1  ..\\n  ]\\n\\n  [\\n    !^  ..\\n    $1  #1\\n\\n    $1 ..  .. $1\\n  ]\\n\\n  [\\n    !^  !^\\n    $0  #0\\n\\n    $0 ..  .. $0\\n  ]\\n\\n  [\\n    j^ __   j^ !^\\n    #1 __   .. __\\n\\n    .. #1  #1 ..\\n  ]\\n\\n  [\\n    j^  ..\\n    #0  ..\\n\\n    .. #0  #0 ..\\n  ]\\n\\n  . # debug\\n]\\n\\n# `.` instruction\\n[\\n  a. __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n    Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    m_ m_ m_ m_ m_ m_ m_ m_ M< #*       o_ o_ o_ o_ o_ o_ o_ o_ M< ..\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n\\n  O o_\\n\\n  [\\n    o_  m_\\n  ]\\n\\n  . # debug\\n]\\n\\n# `,` instruction\\n[\\n  a, __   __ __\\n  !^ ..   .. !^\\n  .. ..   @* ..\\n\\n  [\\n    Mv @*  Mv #*\\n\\n    .. @*  @* ..\\n  ]\\n\\n  [\\n    m_ m_ m_ m_ m_ m_ m_ m_ M< #*       i0 i0 i0 i0 i0 i0 i0 i0 M< ..\\n\\n    #*  ..\\n    ..  #*\\n  ]\\n\\n  I i_\\n\\n  [\\n    i_  m_\\n  ]\\n\\n  . # debug\\n]\\n\\n]\");\n\n//# sourceURL=webpack:///../examples/bf.mosaic?");

/***/ }),

/***/ "../examples/cat.mosaic":
/*!******************************!*\
  !*** ../examples/cat.mosaic ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"a. a. a. a. a. a. a. a.\\n\\n[\\n  # input into the 8 `a.` tiles\\n  I a.\\n\\n  [\\n    # if any tiles are still `a.`, eof was reached, so replace each with `..` to end the main loop\\n    a.  ..\\n  ]\\n\\n  # output the byte just inputted\\n  O a_\\n\\n  [\\n    # return the bits to `a.` for the next iteration of the loop\\n\\n    a0  a.\\n\\n    a1  a.\\n  ]\\n]\");\n\n//# sourceURL=webpack:///../examples/cat.mosaic?");

/***/ }),

/***/ "../examples/cgol.mosaic":
/*!*******************************!*\
  !*** ../examples/cgol.mosaic ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"j^ i#\\n\\n# The initial mosaic has two marking tiles for reading input,\\n# a start-of-line marker (`j^`) and cursor (`i#`)\\n\\n#\\n# Reading the input (`X` for live, `.` for dead):\\n#\\n[\\n  [\\n    # Input into the cursor tile\\n    i i#\\n\\n    # If there is still an `i#` tile, the end of a line was reached; add an end-of-line marker\\n    i#  j$\\n\\n    # Otherwise, mark the spot for the next cursor\\n    i_ ..  i_ j#\\n\\n    # Convert `X`s to live cells\\n    iX  !.\\n\\n    # Convert the rest to dead cells\\n    i_  ..\\n\\n    # Change the `j#` to a cursor to continue the loop\\n    j#  i#\\n  ]\\n\\n  # End of line was reached\\n\\n  # If the first character matches `_.` (if it's not the end-of-line marker),\\n  # move the start-of-line marker to the next line and make a new cursor\\n  j^ _.  .. _.\\n  .. ..  j^ i#\\n]\\n\\n# Clear the end-of-line markers\\n[\\n  j$  ..\\n]\\n\\n# Remove the start-of-line marker\\nj^  ..\\n\\n\\n#\\n# Evolving the pattern:\\n#\\n[\\n  . # debug; linger on this frame\\n\\n  [\\n    # Mark cells that will be alive next generation with an asterisk.\\n    # These replacement rules were exhaustively generated for aesthetics during execution.\\n    # Implementing the evolution could be done less verbosely, but it wouldn't look as good.\\n\\n    !_ !_ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ !_ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ !_  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ !_ !_  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ !_ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ !_  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ !_ !_  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    !_ _. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    !_ _. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    !_ _. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ !_ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    !_ ._ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ !_ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    !_ _. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ _. !_  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ _. !_  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    !_ !_ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    !_ ._ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ !_ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ _. !_  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ !_ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ !_ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ !_ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    !_ !_ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    !_ !_ ._  __ __ __\\n\\n    !_ !_ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    !_ ._ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ !_ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ _. !_  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ ._ !_  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ ._ !_  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    !_ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    !_ ._ !_  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ !_ !_  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ !_ !_  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ _. ._  __ _* __\\n    ._ !_ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ _. ._  __ _* __\\n    ._ !_ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ _. !_  __ _* __\\n    ._ !_ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ _. ._  __ _* __\\n    !_ !_ !_  __ __ __\\n    \\n    !_ !_ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ !_  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ !_ !_  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    !_ !. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    !_ !. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    !_ !. ._  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ !. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ !. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ !. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ !. !_  __ _* __\\n    ._ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ !. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ !. ._  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ !. !_  __ _* __\\n    !_ ._ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ !. ._  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ !. !_  __ _* __\\n    ._ !_ ._  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    !_ !_ ._  __ __ __\\n\\n    !_ ._ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ !_ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ !_  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    !_ !. ._  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ !. !_  __ _* __\\n    ._ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    !_ ._ !_  __ __ __\\n\\n    ._ ._ ._  __ __ __\\n    ._ !. ._  __ _* __\\n    ._ !_ !_  __ __ __\\n  ]\\n  # Kill cells without an asterisk\\n  [\\n    !.  ..\\n  ]\\n  # Set cells with an asterisk to live, removing the asterisk\\n  [\\n    _*  !.\\n  ]\\n]\\n\");\n\n//# sourceURL=webpack:///../examples/cgol.mosaic?");

/***/ }),

/***/ "../examples/colors.mosaic":
/*!*********************************!*\
  !*** ../examples/colors.mosaic ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\".>\\n\\n.>  .. aa AA .. qq QQ .. ,, !!\\n..  .>\\n\\n.>  .. bb BB .. zz ZZ\\n..  .>\\n\\n.>  .. cc CC .. jj JJ\\n..  .>\\n\\n.>  .. dd DD .. 55 %%\\n..  .>\\n\\n.>  .. ee EE .. uu UU\\n..  .>\\n\\n.>  .. ff FF .. pp PP\\n..  .>\\n\\n.>  .. gg GG .. ii II\\n..  .>\\n\\n.>  .. hh HH .. ;; ::\\n..  .>\\n\\n.>  .. ii II .. cc CC\\n..  .>\\n\\n.>  .. jj JJ .. 22 @@\\n..  .>\\n\\n.>  .. kk KK .. oo OO\\n..  .>\\n\\n.>  .. ll LL .. ee EE\\n..  .>\\n\\n.>  .. mm MM .. ss SS\\n..  .>\\n\\n.>  .. nn NN .. 77 &&\\n..  .>\\n\\n.>  .. oo OO .. hh HH\\n..  .>\\n\\n.>  .. pp PP .. yy YY\\n..  .>\\n\\n.>  .. qq QQ .. vv VV\\n..  .>\\n\\n.>  .. rr RR .. ll LL\\n..  .>\\n\\n.>  .. ss SS .. -- ++\\n..  .>\\n\\n.>  .. tt TT .. // ??\\n..  .>\\n\\n.>  .. uu UU .. 44 $$\\n..  .>\\n\\n.>  .. vv VV .. ww WW\\n..  .>\\n\\n.>  .. ww WW .. 88 **\\n..  .>\\n\\n.>  .. xx XX .. nn NN\\n..  .>\\n\\n.>  .. yy YY .. `` ~~\\n..  .>\\n\\n.>  .. zz ZZ .. 11 >>\\n..  .>\\n\\n.>  .. 00 )) .. rr RR\\n..  .>\\n\\n.>  .. 11 >> .. aa AA\\n..  .>\\n\\n.>  .. 22 @@ .. gg GG\\n..  .>\\n\\n.>  .. 33 ## .. '' \\\"\\\"\\n..  .>\\n\\n.>  .. 44 $$ .. == <<\\n..  .>\\n\\n.>  .. 55 %% .. tt TT\\n..  .>\\n\\n.>  .. 66 ^^ .. [[ {{\\n..  .>\\n\\n.>  .. 77 && .. kk KK\\n..  .>\\n\\n.>  .. 88 ** .. mm MM\\n..  .>\\n\\n.>  .. 99 (( .. 99 ((\\n..  .>\\n\\n.>  .. `` ~~ .. 33 ##\\n..  .>\\n\\n.>  .. -- ++ .. ff FF\\n..  .>\\n\\n.>  .. == << .. xx XX\\n..  .>\\n\\n.>  .. // ?? .. \\\\\\\\ ||\\n..  .>\\n\\n.>  .. ;; :: .. 66 ^^\\n..  .>\\n\\n.>  .. '' \\\"\\\" .. dd DD\\n..  .>\\n\\n.>  .. [[ {{ .. ]] }}\\n..  .>\\n\\n.>  .. ]] }} .. 00 ))\\n..  .>\\n\\n.>  .. \\\\\\\\ || .. bb BB\\n..  .>\\n\\n.>  ..\");\n\n//# sourceURL=webpack:///../examples/colors.mosaic?");

/***/ }),

/***/ "../examples/fact.mosaic":
/*!*******************************!*\
  !*** ../examples/fact.mosaic ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\na.\\n\\n#\\n# Reads the input (as binary string, e.g. `5` as `\\\"101\\\"`):\\n#\\n[\\n  i a.\\n\\n  a.  A.\\n\\n  a_ ..  a_ a.\\n]\\n\\nA.  ..\\n\\na_ ..  A_ ..\\n.. ..  b1 ..\\n\\n#\\n# Cacluates the factorial\\n#\\n\\n# This starts a multiplicative accumulator at `1`,\\n# and continually multiplies it by `n` and then decreases `n`.\\n# Does all computations in binary.\\n[\\n  [\\n    A1  A1\\n    b_  B_\\n\\n    A0  A0\\n    __  __\\n    ..  c0\\n\\n    [\\n      B1  __\\n      __  __\\n      ..  @i\\n\\n      B0  B0\\n      ..  c0\\n\\n      [\\n        c0  c1\\n        @i  ..\\n\\n        __ c1  __ c0\\n        .. @i  @i ..\\n\\n        ..  c1\\n        @i  ..\\n      ]\\n\\n      .. B_  .. b_\\n\\n      b_ B_  B_ b_\\n    ]\\n\\n    A_  A_\\n    b_  B_\\n\\n    [\\n      b_ B_  B_ b_\\n    ]\\n\\n    [\\n      .. B1 __   b1 .. B_\\n      \\n      .. B0 __   b0 .. B_\\n    ]\\n\\n    B.  ..\\n\\n    .. A_  .. a_\\n\\n    a_ A_  A_ a_\\n  ]\\n\\n  [\\n    b_  ..\\n  ]\\n\\n  [\\n    ..  b0\\n    c0  ..\\n\\n    ..  b1\\n    c1  ..\\n  ]\\n\\n  .. ..  @d ..\\n  a_ ..  a_ ..\\n\\n  [\\n    @d  ..\\n    a1  a0\\n\\n    .. @d  @d ..\\n    __ a0  __ a1\\n  ]\\n\\n  ..  @x\\n  a1  a1\\n\\n  [\\n    @x ..  .. @x\\n    a_ a_  a_ a_\\n  ]\\n\\n  .. ..  @f ..\\n  a_ ..  a_ ..\\n\\n  [\\n    .. @f  @f ..\\n    __ __  __ ..\\n    __ b_  __ r_\\n  ]\\n\\n  @f  ..\\n\\n  @x  ..\\n  a_  A_\\n]\\n\\n#\\n# Outputs the factorial (as binary string, e.g. `120` as `\\\"1111000\\\"`):\\n#\\n[\\n  o r_\\n\\n  r_  ..\\n]\\n\");\n\n//# sourceURL=webpack:///../examples/fact.mosaic?");

/***/ }),

/***/ "../examples/fib.mosaic":
/*!******************************!*\
  !*** ../examples/fib.mosaic ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\na0\\na1\\n\\n#\\n# Calculates the Fibonacci sequence, displayed in binary on rows of tiles.\\n#\\n\\n# Each iteration, it adds the two bottom rows to create a new row.\\n\\n[\\n  [\\n    A_  A_\\n    ..  n0\\n\\n    A1  __\\n    n_  N_\\n\\n    [\\n      N0  n1\\n\\n      N.  n1\\n\\n      __ N1  N_ n0\\n    ]\\n\\n    A1  __\\n    __  __\\n    n_  N_\\n\\n    [\\n      N0  n1\\n\\n      N.  n1\\n\\n      __ N1  N_ n0\\n    ]\\n\\n    __ A_  A_ a_\\n    __ A_  A_ a_\\n\\n    a.  ..\\n\\n    A.  ..\\n    A.  ..\\n  ]\\n\\n  [\\n    n_  a_\\n  ]\\n\\n  .\\n\\n  a_ ..  A_ ..\\n  a_ ..  A_ ..\\n  .. ..  .. ..\\n]\");\n\n//# sourceURL=webpack:///../examples/fib.mosaic?");

/***/ }),

/***/ "../examples/logo.mosaic":
/*!*******************************!*\
  !*** ../examples/logo.mosaic ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"!* !* !. !.\\n!. !* !* !.\\n!. !. !* !*\\n\\n.\\n\\n!*  qm\\n\\n!*  5o\\n\\n!*  is\\n\\n!*  ya\\n\\n!*  `i\\n\\n!*  9c\\n\");\n\n//# sourceURL=webpack:///../examples/logo.mosaic?");

/***/ }),

/***/ "./src/addGrout.ts":
/*!*************************!*\
  !*** ./src/addGrout.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addGrout\": () => (/* binding */ addGrout)\n/* harmony export */ });\n/* harmony import */ var _geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geo */ \"./src/geo.ts\");\n\nconst angleRange = 1 / 3;\nconst radiusMin = 2.5;\nconst radiusMax = radiusMin + 1.5;\nfunction addGrout(polygon, scale = 1, reverse = false) {\n    polygon = polygon.filter((x, i, a) => _geo__WEBPACK_IMPORTED_MODULE_0__.v.mag(_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(x, a[(i + 1) % a.length])) > 8);\n    if (reverse)\n        polygon.reverse();\n    if (polygon.length < 3)\n        return null;\n    let newPolygon = [];\n    for (const [i, b] of polygon.entries()) {\n        let a = polygon[(i + polygon.length - 1) % polygon.length];\n        let c = polygon[(i + 1) % polygon.length];\n        let concave = (0,_geo__WEBPACK_IMPORTED_MODULE_0__.getSide)([a, b], c) !== -1;\n        let minV = concave ? _geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(b, a) : _geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(c, b);\n        let maxV = concave ? _geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(b, c) : _geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(a, b);\n        let [minA, maxA] = [minV, maxV].map(x => Math.atan2(..._geo__WEBPACK_IMPORTED_MODULE_0__.v.rsz(x)));\n        if (Math.abs(Math.abs(maxA - minA) - Math.PI) < Math.PI * 2 / 360)\n            continue;\n        let diffA = (maxA < minA ? (Math.PI * 2 + maxA - minA) : maxA - minA);\n        let angle = minA + (Math.random() * angleRange + (1 - angleRange) / 2) * diffA;\n        let amount = scale * (radiusMin + (radiusMax - radiusMin) * Math.random());\n        newPolygon.push([b[0] + Math.sin(angle) * amount, b[1] + Math.cos(angle) * amount]);\n    }\n    newPolygon = newPolygon.filter((x, i, a) => _geo__WEBPACK_IMPORTED_MODULE_0__.v.mag(_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(x, a[(i + 1) % a.length])) > 4);\n    if (newPolygon.length < 3)\n        return null;\n    if (reverse)\n        newPolygon.reverse();\n    return newPolygon;\n}\n\n\n//# sourceURL=webpack:///./src/addGrout.ts?");

/***/ }),

/***/ "./src/bsp.ts":
/*!********************!*\
  !*** ./src/bsp.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bspEdges\": () => (/* binding */ bspEdges),\n/* harmony export */   \"intersect\": () => (/* binding */ intersect),\n/* harmony export */   \"diff\": () => (/* binding */ diff),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"polygonToBsp\": () => (/* binding */ polygonToBsp),\n/* harmony export */   \"addEdgesToBsp\": () => (/* binding */ addEdgesToBsp),\n/* harmony export */   \"splitEdges\": () => (/* binding */ splitEdges),\n/* harmony export */   \"clipEdges\": () => (/* binding */ clipEdges),\n/* harmony export */   \"pointInsideBsp\": () => (/* binding */ pointInsideBsp),\n/* harmony export */   \"bspToConvexPolygons\": () => (/* binding */ bspToConvexPolygons),\n/* harmony export */   \"trimConvex\": () => (/* binding */ trimConvex)\n/* harmony export */ });\n/* harmony import */ var _geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geo */ \"./src/geo.ts\");\n\nfunction* bspEdges(bsp) {\n    if (!bsp)\n        return;\n    yield* bsp.segments;\n    yield* bspEdges(bsp.left);\n    yield* bspEdges(bsp.right);\n}\nfunction* intersect(aBsp, bBsp) {\n    yield* clipEdges(bBsp, [...bspEdges(aBsp)], true, false);\n    yield* clipEdges(aBsp, [...bspEdges(bBsp)], true, true);\n}\nfunction* diff(aBsp, bBsp) {\n    bBsp = invert(bBsp);\n    yield* clipEdges(bBsp, [...bspEdges(aBsp)], true, false);\n    yield* clipEdges(aBsp, [...bspEdges(bBsp)], true, true);\n}\nfunction invert(bsp) {\n    if (bsp === null)\n        return null;\n    return {\n        line: bsp.line.slice().reverse(),\n        segments: bsp.segments.map(x => x.slice().reverse()),\n        left: invert(bsp.right),\n        right: invert(bsp.left),\n    };\n}\nfunction polygonToBsp(polygon) {\n    return addEdgesToBsp(null, (0,_geo__WEBPACK_IMPORTED_MODULE_0__.allPolyEdges)(polygon));\n}\nfunction addEdgesToBsp(bsp, edges) {\n    if (!edges.length)\n        return bsp;\n    if (bsp === null)\n        bsp = { line: edges[0], segments: [edges.shift()], left: null, right: null };\n    let leftEdges = [];\n    let rightEdges = [];\n    splitEdges(bsp.line, edges, {\n        left: leftEdges,\n        right: rightEdges,\n        co: bsp.segments,\n        opp: [],\n    });\n    bsp.left = addEdgesToBsp(bsp.left, leftEdges);\n    bsp.right = addEdgesToBsp(bsp.right, rightEdges);\n    return bsp;\n}\nfunction splitEdges(line, edges, groups) {\n    for (const edge of edges) {\n        let pSide = (0,_geo__WEBPACK_IMPORTED_MODULE_0__.getSide)(line, edge[0]);\n        let qSide = (0,_geo__WEBPACK_IMPORTED_MODULE_0__.getSide)(line, edge[1]);\n        if ((pSide || qSide) === (qSide || pSide)) {\n            let side = pSide || qSide;\n            if (side === 0)\n                if (_geo__WEBPACK_IMPORTED_MODULE_0__.v.dot(_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(...edge), _geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(...line)) > 0)\n                    groups.co.push(edge);\n                else\n                    groups.opp.push(edge);\n            else if (side === -1)\n                groups.left.push(edge);\n            else if (side === 1)\n                groups.right.push(edge);\n            else\n                throw new Error(\"invalid side \" + side);\n        }\n        else {\n            let [, middle] = (0,_geo__WEBPACK_IMPORTED_MODULE_0__.intersectLineSegments)(line, edge);\n            let pEdge = [edge[0], middle];\n            let qEdge = [middle, edge[1]];\n            for (let [side, edge] of [[pSide, pEdge], [qSide, qEdge]])\n                if (side === -1)\n                    groups.left.push(edge);\n                else if (side === 1)\n                    groups.right.push(edge);\n                else\n                    throw new Error(\"invalid side \" + [pSide, qSide, side, edge]);\n        }\n    }\n}\nfunction* clipEdges(bsp, edges, inside, cplnb) {\n    if (bsp === null)\n        return yield* edges;\n    let leftEdges = [];\n    let rightEdges = [];\n    splitEdges(bsp.line, edges, {\n        left: leftEdges,\n        right: rightEdges,\n        co: !inside ? leftEdges : rightEdges,\n        opp: cplnb === inside ? leftEdges : rightEdges,\n    });\n    if (bsp.left)\n        yield* clipEdges(bsp.left, leftEdges, inside, cplnb);\n    else if (inside)\n        yield* leftEdges;\n    if (bsp.right)\n        yield* clipEdges(bsp.right, rightEdges, inside, cplnb);\n    else if (!inside)\n        yield* rightEdges;\n}\nfunction pointInsideBsp(bsp, point) {\n    if (bsp === null)\n        return null;\n    let side = (0,_geo__WEBPACK_IMPORTED_MODULE_0__.getSide)(bsp.line, point);\n    if (side === 0)\n        return null;\n    let sub = side === 1 ? bsp.right : bsp.left;\n    if (sub === null)\n        return side === -1;\n    return pointInsideBsp(sub, point);\n}\nfunction* bspToConvexPolygons(bsp, edges) {\n    if (bsp == null)\n        return yield (0,_geo__WEBPACK_IMPORTED_MODULE_0__.reconstructPolygon)(edges)[0];\n    let leftEdges = [];\n    let rightEdges = [];\n    let both = [[_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(bsp.line[0], _geo__WEBPACK_IMPORTED_MODULE_0__.v.rsz(_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(...bsp.line), 10000)), _geo__WEBPACK_IMPORTED_MODULE_0__.v.add(bsp.line[0], _geo__WEBPACK_IMPORTED_MODULE_0__.v.rsz(_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(...bsp.line), 10000))]];\n    splitEdges(bsp.line, edges, {\n        left: leftEdges,\n        right: rightEdges,\n        co: [],\n        opp: [],\n    });\n    leftEdges = trimConvex([...leftEdges, ...both]);\n    rightEdges = trimConvex([...rightEdges, ...both.map(x => x.slice().reverse())]);\n    yield* bspToConvexPolygons(bsp.left, leftEdges);\n    if (bsp.right)\n        yield* bspToConvexPolygons(bsp.right, rightEdges);\n}\nfunction trimConvex(edges) {\n    for (let i = 0; i < edges.length; i++) {\n        let newEdges = [];\n        splitEdges(edges[i], edges, {\n            left: [],\n            right: newEdges,\n            co: newEdges,\n            opp: [],\n        });\n        edges = newEdges;\n    }\n    return edges;\n}\n\n\n//# sourceURL=webpack:///./src/bsp.ts?");

/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"size\": () => (/* binding */ size),\n/* harmony export */   \"bgCellSize\": () => (/* binding */ bgCellSize),\n/* harmony export */   \"fgCellSize\": () => (/* binding */ fgCellSize),\n/* harmony export */   \"symbolGrout\": () => (/* binding */ symbolGrout),\n/* harmony export */   \"tileSize\": () => (/* binding */ tileSize),\n/* harmony export */   \"thickness\": () => (/* binding */ thickness),\n/* harmony export */   \"groutColor\": () => (/* binding */ groutColor),\n/* harmony export */   \"skyColor\": () => (/* binding */ skyColor)\n/* harmony export */ });\nconst size = 750;\nconst bgCellSize = size / 11;\nconst fgCellSize = size / 17;\nconst symbolGrout = .1;\nconst tileSize = 10;\nconst thickness = .1;\nconst groutColor = \"#141921\";\nconst skyColor = \"#4f5e80\";\n\n\n//# sourceURL=webpack:///./src/constants.ts?");

/***/ }),

/***/ "./src/examples.ts":
/*!*************************!*\
  !*** ./src/examples.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"examples\": () => (/* binding */ examples)\n/* harmony export */ });\n/* harmony import */ var _examples_bf_mosaic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../examples/bf.mosaic */ \"../examples/bf.mosaic\");\n/* harmony import */ var _examples_cgol_mosaic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../examples/cgol.mosaic */ \"../examples/cgol.mosaic\");\n/* harmony import */ var _examples_fact_mosaic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../examples/fact.mosaic */ \"../examples/fact.mosaic\");\n/* harmony import */ var _examples_fib_mosaic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../examples/fib.mosaic */ \"../examples/fib.mosaic\");\n/* harmony import */ var _examples_colors_mosaic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../examples/colors.mosaic */ \"../examples/colors.mosaic\");\n/* harmony import */ var _examples_cat_mosaic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../examples/cat.mosaic */ \"../examples/cat.mosaic\");\n/* harmony import */ var _examples_logo_mosaic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../examples/logo.mosaic */ \"../examples/logo.mosaic\");\n// @ts-nocheck\n\n\n\n\n\n\n\nconst cgolInput = `\nXXXXXX.XX\nXXXXXX.XX\n.......XX\nXX.....XX\nXX.....XX\nXX.....XX\nXX.......\nXX.XXXXXX\nXX.XXXXXX\n`.trim();\nconst examples = {\n    logo: [\"Mosaic Logo\", _examples_logo_mosaic__WEBPACK_IMPORTED_MODULE_6__.default],\n    cgol: [\"Conway's Game of Life\", _examples_cgol_mosaic__WEBPACK_IMPORTED_MODULE_1__.default, cgolInput],\n    fact: [\"Factorial Calculator\", _examples_fact_mosaic__WEBPACK_IMPORTED_MODULE_2__.default, \"101\"],\n    fib: [\"Fibonacci Sequence\", _examples_fib_mosaic__WEBPACK_IMPORTED_MODULE_3__.default],\n    bf: [\"BF Interpreter\", _examples_bf_mosaic__WEBPACK_IMPORTED_MODULE_0__.default, \">,[>,]<[.<]\\nabc\"],\n    cat: [\"Cat Program\", _examples_cat_mosaic__WEBPACK_IMPORTED_MODULE_5__.default, \"Hello, World!\"],\n    colors: [\"Color Cheatsheat\", _examples_colors_mosaic__WEBPACK_IMPORTED_MODULE_4__.default],\n};\n\n\n//# sourceURL=webpack:///./src/examples.ts?");

/***/ }),

/***/ "./src/geo.ts":
/*!********************!*\
  !*** ./src/geo.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"v\": () => (/* binding */ v),\n/* harmony export */   \"intersectLineSegments\": () => (/* binding */ intersectLineSegments),\n/* harmony export */   \"getSide\": () => (/* binding */ getSide),\n/* harmony export */   \"allPolyEdges\": () => (/* binding */ allPolyEdges),\n/* harmony export */   \"reconstructPolygon\": () => (/* binding */ reconstructPolygon)\n/* harmony export */ });\nconst v = {\n    add: (a, b) => [a[0] + b[0], a[1] + b[1]],\n    sub: (a, b) => [a[0] - b[0], a[1] - b[1]],\n    dot: (a, b) => a[0] * b[0] + a[1] * b[1],\n    scl: (a, b) => [a[0] * b, a[1] * b],\n    rsz: (a, b = 1) => v.scl(a, b / Math.sqrt(v.dot(a, a))),\n    mag: (a) => Math.sqrt(v.dot(a, a)),\n};\nfunction intersectLineSegments([p, pr], [q, qs]) {\n    let cross = (a, b) => a[0] * b[1] - a[1] * b[0];\n    let r = v.sub(pr, p);\n    let s = v.sub(qs, q);\n    let rXs = cross(r, s);\n    let t = cross(v.sub(q, p), s) / rXs;\n    let u = cross(v.sub(q, p), r) / rXs;\n    return [t >= 0 && t <= 1 && u >= 0 && u <= 1, v.add(p, v.scl(r, t)), t, u];\n}\nfunction getSide([p, q], r) {\n    let s = v.sub(q, p);\n    let t = v.sub(r, p);\n    let x = s[0] * t[1] - s[1] * t[0];\n    return Math.sign(x);\n}\nfunction allPolyEdges(poly) {\n    return poly.flatMap(x => x.map((y, i) => [y, x[(i + 1) % x.length]]));\n}\nfunction reconstructPolygon(edges) {\n    let polys = [];\n    while (edges.length) {\n        polys.push([...edges.pop()]);\n        while (edges.length) {\n            let i = edges.findIndex(x => v.mag(v.sub(polys[polys.length - 1].slice(-1)[0], x[0])) < 0.0001);\n            if (i === -1)\n                break;\n            polys[polys.length - 1].push(edges.splice(i, 1)[0][1]);\n        }\n    }\n    return polys.map(x => x.slice(0, -1));\n}\n\n\n//# sourceURL=webpack:///./src/geo.ts?");

/***/ }),

/***/ "./src/getSymbolPolygon.ts":
/*!*********************************!*\
  !*** ./src/getSymbolPolygon.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSymbolPolygon\": () => (/* binding */ getSymbolPolygon)\n/* harmony export */ });\n/* harmony import */ var opentype_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! opentype.js */ \"./node_modules/opentype.js/dist/opentype.module.js\");\n/* harmony import */ var _RobotoMono_Regular_ttf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../RobotoMono-Regular.ttf */ \"./RobotoMono-Regular.ttf\");\n/* harmony import */ var _RobotoMono_Regular_ttf__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_RobotoMono_Regular_ttf__WEBPACK_IMPORTED_MODULE_1__);\n\n// @ts-ignore\n\nconst font = opentype_js__WEBPACK_IMPORTED_MODULE_0__.parse((_RobotoMono_Regular_ttf__WEBPACK_IMPORTED_MODULE_1___default()));\nconst fontSizeScale = 700 / 750;\nconst forceCenter = new Set(\"*[]{}()\");\nfunction getSymbolPolygon(symbol, size) {\n    let fontSize = fontSizeScale * size;\n    let bb = font.getPath(symbol, 0, 0, fontSize).getBoundingBox();\n    let path = font.getPath(symbol, size / 2 - (bb.x2 + bb.x1) / 2, forceCenter.has(symbol)\n        ? size / 2 - (bb.y2 + bb.y1) / 2\n        : size / 2 + (font.tables.os2.sCapHeight) * fontSize / font.unitsPerEm / 2 - Math.max(bb.y2 / 2, 0), fontSize);\n    if (!path.commands.length)\n        return [];\n    let newPath = new opentype_js__WEBPACK_IMPORTED_MODULE_0__.Path();\n    let el = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    let polygons = [[]];\n    let p = [0, 0];\n    for (let [i, command] of path.commands.entries()) {\n        newPath.extend([command]);\n        el.setAttribute(\"d\", newPath.toPathData(10));\n        let point = el.getPointAtLength(el.getTotalLength());\n        if (p + \"\" !== [point.x, point.y] + \"\")\n            polygons[polygons.length - 1].push(p = [point.x, point.y]);\n        if (command.type === \"Z\") {\n            let p = polygons[polygons.length - 1];\n            if (p[0] + \"\" === p[p.length - 1] + \"\")\n                p.pop();\n            if (i !== path.commands.length - 1) {\n                polygons.push([]);\n                newPath = new opentype_js__WEBPACK_IMPORTED_MODULE_0__.Path();\n            }\n        }\n    }\n    return polygons;\n}\n\n\n//# sourceURL=webpack:///./src/getSymbolPolygon.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__) => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pkg_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../pkg/index.js */ \"./pkg/index_bg.js\");\n/* harmony import */ var _tileObj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tileObj */ \"./src/tileObj.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/constants.ts\");\n/* harmony import */ var _examples__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./examples */ \"./src/examples.ts\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* harmony import */ var three_examples_jsm_controls_TrackballControls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/examples/jsm/controls/TrackballControls */ \"./node_modules/three/examples/jsm/controls/TrackballControls.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pkg_index_js__WEBPACK_IMPORTED_MODULE_5__]);\n_pkg_index_js__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\nconsole.log(_pkg_index_js__WEBPACK_IMPORTED_MODULE_5__.hi());\nlet canvas = document.getElementById(\"canvas\");\nconst scene = new three__WEBPACK_IMPORTED_MODULE_6__.Scene();\nconst camera = new three__WEBPACK_IMPORTED_MODULE_6__.PerspectiveCamera(75, 0, 0.1, 250);\nconst renderer = new three__WEBPACK_IMPORTED_MODULE_6__.WebGLRenderer({ canvas, antialias: true });\nrenderer.physicallyCorrectLights = true;\nconst code = document.getElementById(\"code\");\nconst errorBox = document.getElementById(\"error\");\nconst controlsBox = document.getElementById(\"controls\");\nconst speedBox = document.getElementById(\"speedBox\");\nconst speedInput = document.getElementById(\"speed\");\nconst pauseButton = document.getElementById(\"pause\");\nconst input = document.getElementById(\"input\");\nconst output = document.getElementById(\"output\");\ncode.value = _examples__WEBPACK_IMPORTED_MODULE_2__.examples.logo[1];\nconst examplesBox = document.getElementById(\"examples\");\nfor (let id in _examples__WEBPACK_IMPORTED_MODULE_2__.examples) {\n    let span = document.createElement(\"span\");\n    span.addEventListener(\"click\", () => {\n        code.value = _examples__WEBPACK_IMPORTED_MODULE_2__.examples[id][1];\n        let x = \"code\";\n        if (_examples__WEBPACK_IMPORTED_MODULE_2__.examples[id][2]) {\n            input.value = _examples__WEBPACK_IMPORTED_MODULE_2__.examples[id][2];\n            x = \"io\";\n        }\n        onChange();\n        switchSection(document.querySelector(`#header > span[data-section='${x}']`));\n    });\n    span.textContent = _examples__WEBPACK_IMPORTED_MODULE_2__.examples[id][0];\n    examplesBox.appendChild(span);\n}\nlet currentSection = examplesBox;\nfor (let sectionLink of document.querySelectorAll(\"#header > span\"))\n    sectionLink.addEventListener(\"click\", () => switchSection(sectionLink));\nfunction switchSection(sectionLink) {\n    currentSection.style.display = \"none\";\n    currentSection = document.getElementById(sectionLink.attributes.getNamedItem(\"data-section\").value);\n    currentSection.style.display = \"flex\";\n    document.querySelector(\"#header > .selected\").classList.remove(\"selected\");\n    sectionLink.classList.add(\"selected\");\n}\nconst stepButton = document.getElementById(\"step\");\nlet light = new three__WEBPACK_IMPORTED_MODULE_6__.DirectionalLight();\nlight.position.set(-2, 5, -10);\nlight.intensity = 1;\nlight.updateMatrixWorld();\nscene.add(light);\nscene.add(new three__WEBPACK_IMPORTED_MODULE_6__.AmbientLight(0xffffff, 2));\nconst [skyBoxUp, skyBoxDown, skyBoxSide] = [[_constants__WEBPACK_IMPORTED_MODULE_1__.skyColor, _constants__WEBPACK_IMPORTED_MODULE_1__.skyColor], [_constants__WEBPACK_IMPORTED_MODULE_1__.groutColor, _constants__WEBPACK_IMPORTED_MODULE_1__.groutColor], [_constants__WEBPACK_IMPORTED_MODULE_1__.skyColor, _constants__WEBPACK_IMPORTED_MODULE_1__.groutColor]].map(([a, b]) => {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = 1000;\n    canvas.height = 1000;\n    let ctx = canvas.getContext(\"2d\");\n    let grd = ctx.createLinearGradient(0, 0, 0, 500);\n    grd.addColorStop(0, a);\n    grd.addColorStop(1, b);\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, 1000, 500);\n    ctx.fillStyle = b;\n    ctx.fillRect(0, 500, 1000, 500);\n    return canvas;\n});\nscene.background = new three__WEBPACK_IMPORTED_MODULE_6__.CubeTexture([\n    skyBoxSide,\n    skyBoxSide,\n    skyBoxUp,\n    skyBoxDown,\n    skyBoxSide,\n    skyBoxSide,\n]);\nscene.background.needsUpdate = true;\nscene.fog = new three__WEBPACK_IMPORTED_MODULE_6__.Fog(_constants__WEBPACK_IMPORTED_MODULE_1__.skyColor, 175, 250);\nscene.autoUpdate = false;\ninput.addEventListener(\"blur\", onChange);\ncode.addEventListener(\"blur\", onChange);\nfunction onChange() {\n    for (let k in tiles) {\n        let tile = tiles[k][0];\n        scene.remove(tile);\n        tilePool[tile.name].push(tile);\n        delete tiles[k];\n    }\n    program === null || program === void 0 ? void 0 : program.free();\n    program = undefined;\n    try {\n        program = _pkg_index_js__WEBPACK_IMPORTED_MODULE_5__.Program.new(code.value, input.value);\n    }\n    catch (e) {\n        errorBox.textContent = `Error: ${e}`;\n        controlsBox.style.display = \"none\";\n        return;\n    }\n    errorBox.textContent = \"\";\n    controlsBox.style.display = \"flex\";\n    console.log(program);\n    run();\n}\nlet tiles = {};\nlet program;\nlet paused = false;\nlet speed = 100;\npauseButton.addEventListener(\"click\", () => {\n    paused = !paused;\n    pauseButton.textContent = paused ? \"Play\" : \"Pause\";\n    if (!paused)\n        run();\n});\nspeedInput.addEventListener(\"keypress\", e => {\n    if (e.key === \"Enter\")\n        speedInput.blur();\n});\nspeedInput.addEventListener(\"blur\", () => {\n    let newSpeed = +speedInput.textContent;\n    if (isNaN(newSpeed))\n        newSpeed = speed;\n    if (newSpeed < 5)\n        newSpeed = 5;\n    speed = newSpeed;\n    speedInput.textContent = speed + \"\";\n    run();\n});\nstepButton.addEventListener(\"click\", step);\nspeedBox.addEventListener(\"click\", () => {\n    speedInput.focus();\n});\nlet timeout;\nfunction run() {\n    clearTimeout(timeout);\n    if (!paused) {\n        let t = Date.now();\n        let r = step();\n        if (r !== null)\n            timeout = setTimeout(run, (r ? speed * 3 : speed) - (Date.now() - t));\n    }\n}\nfunction step() {\n    if (!program)\n        return false;\n    let r = program.step();\n    updateMosaic();\n    return r;\n}\ncamera.position.set(0, 50, 0);\nconst orbitControls = new three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_3__.OrbitControls(camera, renderer.domElement);\norbitControls.target.set(0, 0, 0);\norbitControls.enableDamping = true;\norbitControls.dampingFactor = 0.05;\norbitControls.screenSpacePanning = false;\norbitControls.enableRotate = false;\norbitControls.mouseButtons.LEFT = three__WEBPACK_IMPORTED_MODULE_6__.MOUSE.PAN;\norbitControls.enableZoom = false;\nconst trackballControls = new three_examples_jsm_controls_TrackballControls__WEBPACK_IMPORTED_MODULE_4__.TrackballControls(camera, renderer.domElement);\ntrackballControls.noRoll = true;\ntrackballControls.noPan = true;\ntrackballControls.noRotate = true;\ntrackballControls.minDistance = 5;\ntrackballControls.maxDistance = 150;\ntrackballControls.target = orbitControls.target;\norbitControls.maxPolarAngle = Math.PI * .45;\nfunction tick() {\n    window.requestAnimationFrame(tick);\n    if (canvas.width !== window.innerWidth || canvas.height !== window.innerHeight) {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.setViewOffset(window.innerWidth + 500, window.innerHeight, 0, 0, window.innerWidth, window.innerHeight);\n        camera.updateProjectionMatrix();\n    }\n    trackballControls.update();\n    const dist = orbitControls.getDistance();\n    orbitControls.minPolarAngle = orbitControls.maxPolarAngle = Math.PI / 2 * (1 - dist / 150) ** 2;\n    orbitControls.update();\n    renderer.render(scene, camera);\n}\nfunction updateMosaic() {\n    var _a, _b;\n    if (!program)\n        return;\n    output.value = program.output();\n    let { x_min, x_max, y_min, y_max } = program.grid_region();\n    for (let x = x_min; x <= x_max; x++)\n        for (let y = y_min; y <= y_max; y++) {\n            let key = `${x},${y}`;\n            let cell = program.grid_get(x, y);\n            let str = cell ? cell.color + cell.symbol : undefined;\n            if (((_b = (_a = tiles[key]) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : \"..\") === (str !== null && str !== void 0 ? str : \"..\"))\n                continue;\n            if (tiles[key]) {\n                let tile = tiles[key][0];\n                scene.remove(tile);\n                tilePool[tile.name].push(tile);\n            }\n            if ((str !== null && str !== void 0 ? str : \"..\") !== \"..\") {\n                let char = str[1] === \".\" ? \" \" : str[1];\n                let tile = getTile(...getColor(str[0]), char);\n                tile.position.set(x * _constants__WEBPACK_IMPORTED_MODULE_1__.tileSize, 0, y * _constants__WEBPACK_IMPORTED_MODULE_1__.tileSize);\n                tile.updateMatrixWorld();\n                scene.add(tile);\n                tiles[key] = [tile, str];\n            }\n            else\n                delete tiles[key];\n        }\n}\nconst whiteColorProfile = {\n    baseColor: new three__WEBPACK_IMPORTED_MODULE_6__.Color(\"#ddd\"),\n    variation: { h: 0, s: 0, l: .5 },\n    sideMuting: { s: 0, l: .8 },\n};\nconst blackColorProfile = {\n    baseColor: (() => {\n        let hsl = new three__WEBPACK_IMPORTED_MODULE_6__.Color(_constants__WEBPACK_IMPORTED_MODULE_1__.groutColor).getHSL({ h: 0, s: 0, l: 0 });\n        hsl.l += .04;\n        return new three__WEBPACK_IMPORTED_MODULE_6__.Color().setHSL(hsl.h, hsl.s, hsl.l);\n    })(),\n    variation: { h: .05, s: .05, l: .08 },\n    sideMuting: { s: 1, l: 1 },\n};\nconst bgColorProfile = {\n    variation: { h: .075, s: .1, l: .3 },\n    sideMuting: { s: .7, l: .8 },\n};\nlet colors = {\n    \".\": [blackColorProfile, whiteColorProfile],\n    \",\": [blackColorProfile, whiteColorProfile],\n    \"!\": [whiteColorProfile, blackColorProfile],\n};\nlet lower = [...\"abcdefghijklmnopqrstuvwxyz0123456789`-=/;'[]\\\\\"];\nlet upper = [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ)>@#$%^&*(~+<?:\\\"{}|\"];\nlet hues = [...\"qzj5upi;c2oes7hyvl-/4w8n`1rag'=t[km93fx\\\\6d]0b\"];\nlet foo = hues.map((x, i) => x + x + \" \" + upper[lower.indexOf(x)] + upper[lower.indexOf(x)]);\nconsole.log(lower.map((x, i) => x + x + \" \" + upper[i] + upper[i] + \" .. \" + foo[i]).join(\"\\n\"));\nfunction getColor(c) {\n    if (colors[c])\n        return colors[c];\n    let color = new three__WEBPACK_IMPORTED_MODULE_6__.Color();\n    let n = c.charCodeAt(0);\n    let isUpper = upper.includes(c);\n    let lowerVersion = isUpper ? lower[upper.indexOf(c)] : c;\n    let hueInd = hues.indexOf(lowerVersion);\n    let hue = hueInd === -1 ? Math.random() : hueInd / hues.length;\n    color.setHSL(hue, .9, .3);\n    colors[c] = [{ ...bgColorProfile, baseColor: color }, whiteColorProfile];\n    if (isUpper)\n        colors[c].reverse();\n    return colors[c];\n}\nlet tilePool = {};\nfunction getTile(bg, fg, symb) {\n    var _a;\n    let key = JSON.stringify({ bg, fg, symb });\n    let existing = ((_a = tilePool[key]) !== null && _a !== void 0 ? _a : (tilePool[key] = [])).pop();\n    if (existing)\n        return existing;\n    let tile = (0,_tileObj__WEBPACK_IMPORTED_MODULE_0__.createTile)(bg, fg, symb);\n    tile.name = key;\n    return tile;\n}\nonChange();\ntick();\n\n});\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/tileObj.ts":
/*!************************!*\
  !*** ./src/tileObj.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTile\": () => (/* binding */ createTile)\n/* harmony export */ });\n/* harmony import */ var _geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geo */ \"./src/geo.ts\");\n/* harmony import */ var _getSymbolPolygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getSymbolPolygon */ \"./src/getSymbolPolygon.ts\");\n/* harmony import */ var _bsp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bsp */ \"./src/bsp.ts\");\n/* harmony import */ var _voronoi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./voronoi */ \"./src/voronoi.ts\");\n/* harmony import */ var _addGrout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./addGrout */ \"./src/addGrout.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./src/constants.ts\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n\n\n\n\n\n\nfunction createTile(bg, fg, symbol) {\n    let symbolPoly = (0,_getSymbolPolygon__WEBPACK_IMPORTED_MODULE_1__.getSymbolPolygon)(symbol, _constants__WEBPACK_IMPORTED_MODULE_5__.size);\n    const stones = [];\n    for (const [colorProfile, isFg, cellSize] of [[bg, false, _constants__WEBPACK_IMPORTED_MODULE_5__.bgCellSize], [fg, true, _constants__WEBPACK_IMPORTED_MODULE_5__.fgCellSize]]) {\n        let letterBsp = (0,_bsp__WEBPACK_IMPORTED_MODULE_2__.polygonToBsp)(symbolPoly.map(x => (0,_addGrout__WEBPACK_IMPORTED_MODULE_4__.addGrout)(x, _constants__WEBPACK_IMPORTED_MODULE_5__.symbolGrout, !isFg)));\n        let voronoi = (0,_voronoi__WEBPACK_IMPORTED_MODULE_3__.makeVoronoi)(p => isFg === !!(0,_bsp__WEBPACK_IMPORTED_MODULE_2__.pointInsideBsp)(letterBsp, p), _constants__WEBPACK_IMPORTED_MODULE_5__.size, cellSize);\n        for (const origPoly of voronoi) {\n            let origBsp = (0,_bsp__WEBPACK_IMPORTED_MODULE_2__.polygonToBsp)([origPoly]);\n            let diffedEdges = [...(isFg ? _bsp__WEBPACK_IMPORTED_MODULE_2__.intersect : _bsp__WEBPACK_IMPORTED_MODULE_2__.diff)(origBsp, letterBsp)];\n            for (let polySansGrout of (0,_geo__WEBPACK_IMPORTED_MODULE_0__.reconstructPolygon)(diffedEdges)) {\n                let poly = (0,_addGrout__WEBPACK_IMPORTED_MODULE_4__.addGrout)(polySansGrout);\n                if (poly) {\n                    let [min, max] = getBoundingBox(poly);\n                    let convexPolys = [...(0,_bsp__WEBPACK_IMPORTED_MODULE_2__.bspToConvexPolygons)((0,_bsp__WEBPACK_IMPORTED_MODULE_2__.polygonToBsp)([poly]), [])];\n                    let [convexMin, convexMax] = getBoundingBox(convexPolys.flat());\n                    let tolerance = 1;\n                    if ( false\n                        || convexMin[0] + tolerance < min[0]\n                        || convexMin[1] + tolerance < min[1]\n                        || convexMax[0] - tolerance > max[0]\n                        || convexMax[1] - tolerance > max[1])\n                        return createTile(bg, fg, symbol);\n                    let edges = (0,_geo__WEBPACK_IMPORTED_MODULE_0__.allPolyEdges)([poly]);\n                    let mainColor = sampleColorProfile(colorProfile);\n                    let sideColor = getSideColor(colorProfile, mainColor);\n                    let center = [min[0] / 2 + max[0] / 2, min[1] / 2 + max[1] / 2];\n                    let slantDir = Math.random() * Math.PI * 2;\n                    let slantAmount = Math.random() * _constants__WEBPACK_IMPORTED_MODULE_5__.thickness;\n                    let slantSlope = slantAmount / (_geo__WEBPACK_IMPORTED_MODULE_0__.v.mag(_geo__WEBPACK_IMPORTED_MODULE_0__.v.sub(max, min)) * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size);\n                    stones.push({\n                        poly,\n                        edges,\n                        convexPolys,\n                        mainColor,\n                        sideColor,\n                        roughness: .35 + Math.random() * .05,\n                        metalness: .05 + Math.random() * .05,\n                        slantDir,\n                        slantSlope,\n                        center,\n                    });\n                }\n            }\n        }\n    }\n    const lod = new three__WEBPACK_IMPORTED_MODULE_6__.LOD();\n    lod.addLevel(highResTile(stones), 40);\n    lod.addLevel(lowResTile(stones), 50);\n    return lod;\n}\nfunction lowResTile(stones) {\n    const textureSize = 500;\n    const createTexture = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = textureSize;\n        canvas.height = textureSize;\n        const texture = new three__WEBPACK_IMPORTED_MODULE_6__.CanvasTexture(canvas);\n        ctx.imageSmoothingQuality = \"high\";\n        texture.onUpdate = () => delete texture.image;\n        return [ctx, new three__WEBPACK_IMPORTED_MODULE_6__.CanvasTexture(canvas)];\n    };\n    const [albedo, albedoMap] = createTexture();\n    const [surface, surfaceMap] = createTexture();\n    const [normal, normalMap] = createTexture();\n    albedo.fillStyle = _constants__WEBPACK_IMPORTED_MODULE_5__.groutColor;\n    surface.fillStyle = rgb(0, 1, 0);\n    normal.fillStyle = rgb(.5, .5, 1);\n    for (const ctx of [albedo, surface, normal])\n        ctx.fillRect(0, 0, textureSize, textureSize);\n    for (const stone of stones) {\n        albedo.fillStyle = rgb(stone.mainColor.r, stone.mainColor.g, stone.mainColor.b);\n        surface.fillStyle = rgb(0, stone.roughness, stone.metalness);\n        const h = Math.sqrt(1 / stone.slantSlope ** 2 + 1);\n        let x = [Math.cos(stone.slantDir) * .5 / h + .5, -Math.sin(stone.slantDir) * .5 / h + .5, 1 / stone.slantSlope * .5 / h + .5];\n        normal.fillStyle = rgb(...x);\n        for (const ctx of [albedo, surface, normal]) {\n            ctx.beginPath();\n            ctx.moveTo(..._geo__WEBPACK_IMPORTED_MODULE_0__.v.scl(stone.poly[stone.poly.length - 1], textureSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size));\n            for (let p of stone.poly)\n                ctx.lineTo(..._geo__WEBPACK_IMPORTED_MODULE_0__.v.scl(p, textureSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size));\n            ctx.fill();\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n    const geo = new three__WEBPACK_IMPORTED_MODULE_6__.PlaneGeometry(_constants__WEBPACK_IMPORTED_MODULE_5__.tileSize, _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize);\n    const mat = new three__WEBPACK_IMPORTED_MODULE_6__.MeshStandardMaterial({ transparent: true });\n    mat.map = albedoMap;\n    mat.roughnessMap = surfaceMap;\n    mat.metalnessMap = surfaceMap;\n    mat.normalMap = normalMap;\n    mat.normalMapType = three__WEBPACK_IMPORTED_MODULE_6__.ObjectSpaceNormalMap;\n    const tile = new three__WEBPACK_IMPORTED_MODULE_6__.Mesh(geo, mat);\n    tile.rotation.x = -Math.PI / 2;\n    tile.position.y = _constants__WEBPACK_IMPORTED_MODULE_5__.thickness;\n    return tile;\n    function rgb(r, g, b) {\n        return `rgb(${r * 256 | 0}, ${g * 256 | 0}, ${b * 256 | 0})`;\n    }\n}\nfunction highResTile(stones) {\n    const tile = new three__WEBPACK_IMPORTED_MODULE_6__.Group();\n    for (let stone of stones) {\n        let edges = stone.edges;\n        let polys = stone.convexPolys;\n        let slantDirV = _geo__WEBPACK_IMPORTED_MODULE_0__.v.scl([Math.cos(stone.slantDir), Math.sin(stone.slantDir)], stone.slantSlope * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size);\n        let th = (x, y) => _constants__WEBPACK_IMPORTED_MODULE_5__.thickness - _geo__WEBPACK_IMPORTED_MODULE_0__.v.dot(slantDirV, _geo__WEBPACK_IMPORTED_MODULE_0__.v.sub([x, y], stone.center));\n        const topGeo = makeGeo(polys.flatMap(poly => poly.length > 2 ? [...Array(poly.length - 2)].flatMap((_, i) => [\n            poly[i + 1],\n            poly[0],\n            poly[i + 2],\n        ].map(([x, y]) => [x * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size, th(x, y), y * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size])) : []));\n        const sideGeo = makeGeo(edges.flatMap(edge => [\n            [edge[1], 1],\n            [edge[0], 1],\n            [edge[1], 0],\n            [edge[0], 1],\n            [edge[0], 0],\n            [edge[1], 0],\n        ].map(([[x, y], z]) => [x * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size, z * th(x, y), y * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize / _constants__WEBPACK_IMPORTED_MODULE_5__.size])));\n        const topMat = new three__WEBPACK_IMPORTED_MODULE_6__.MeshStandardMaterial({\n            color: stone.mainColor,\n            roughness: stone.roughness,\n            metalness: stone.metalness,\n        });\n        const sideMat = new three__WEBPACK_IMPORTED_MODULE_6__.MeshStandardMaterial({\n            color: stone.sideColor,\n        });\n        const topMesh = new three__WEBPACK_IMPORTED_MODULE_6__.Mesh(topGeo, topMat);\n        const sideMesh = new three__WEBPACK_IMPORTED_MODULE_6__.Mesh(sideGeo, sideMat);\n        tile.add(topMesh, sideMesh);\n    }\n    tile.position.set(-.5 * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize, 0, -.5 * _constants__WEBPACK_IMPORTED_MODULE_5__.tileSize);\n    return tile;\n}\nfunction makeGeo(verts) {\n    const geometry = new three__WEBPACK_IMPORTED_MODULE_6__.BufferGeometry();\n    const vertices = new Float32Array(verts.length * 3);\n    let i = 0;\n    for (let v of verts) {\n        vertices[i++] = v[0];\n        vertices[i++] = v[1];\n        vertices[i++] = v[2];\n    }\n    geometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_6__.BufferAttribute(vertices, 3));\n    geometry.computeVertexNormals();\n    return geometry;\n}\nfunction sampleColorProfile(profile) {\n    let hsl = profile.baseColor.getHSL({ h: 0, s: 0, l: 0 });\n    hsl.h += (Math.random() - .5) * profile.variation.h;\n    hsl.h = (hsl.h + 1) % 1;\n    hsl.s += (Math.random() - .5) * profile.variation.s;\n    hsl.s = Math.max(Math.min(hsl.s, 1), 0);\n    hsl.l += (Math.random() - .5) * profile.variation.l;\n    hsl.l = Math.max(Math.min(hsl.l, 1), 0);\n    let color = new three__WEBPACK_IMPORTED_MODULE_6__.Color();\n    color.setHSL(hsl.h, hsl.s, hsl.l);\n    return color;\n}\nfunction getSideColor(profile, primary) {\n    let hsl = primary.getHSL({ h: 0, s: 0, l: 0 });\n    hsl.s *= profile.sideMuting.s;\n    hsl.l *= profile.sideMuting.l;\n    let color = new three__WEBPACK_IMPORTED_MODULE_6__.Color();\n    color.setHSL(hsl.h, hsl.s, hsl.l);\n    return color;\n}\nfunction getBoundingBox(poly) {\n    return [\n        poly.reduce((a, b) => [Math.min(a[0], b[0]), Math.min(a[1], b[1])]),\n        poly.reduce((a, b) => [Math.max(a[0], b[0]), Math.max(a[1], b[1])]),\n    ];\n}\n\n\n//# sourceURL=webpack:///./src/tileObj.ts?");

/***/ }),

/***/ "./src/voronoi.ts":
/*!************************!*\
  !*** ./src/voronoi.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeVoronoi\": () => (/* binding */ makeVoronoi)\n/* harmony export */ });\n/* harmony import */ var d3_delaunay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-delaunay */ \"./node_modules/d3-delaunay/src/delaunay.js\");\n\nfunction makeVoronoi(f, size, cellSize) {\n    let count = Math.ceil(size / cellSize);\n    const points = [...Array(count)].flatMap((_, i) => [...Array(count)].map((_, j) => genPoint(i, j))).filter(f);\n    const delaunay = d3_delaunay__WEBPACK_IMPORTED_MODULE_0__.default.from(points);\n    const voronoi = delaunay.voronoi([0, 0, size, size]);\n    let polys = [];\n    for (const cell of voronoi.cellPolygons())\n        polys.push(cell.slice(1).reverse());\n    return polys;\n    function genPoint(cellX, cellY) {\n        return [\n            (Math.random() + cellX) * cellSize,\n            (Math.random() + cellY) * cellSize,\n        ];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/voronoi.ts?");

/***/ }),

/***/ "./pkg/index_bg.js":
/*!*************************!*\
  !*** ./pkg/index_bg.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__) => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hi\": () => (/* binding */ hi),\n/* harmony export */   \"JsCell\": () => (/* binding */ JsCell),\n/* harmony export */   \"JsRegion\": () => (/* binding */ JsRegion),\n/* harmony export */   \"Program\": () => (/* binding */ Program),\n/* harmony export */   \"__wbindgen_string_new\": () => (/* binding */ __wbindgen_string_new),\n/* harmony export */   \"__wbindgen_throw\": () => (/* binding */ __wbindgen_throw),\n/* harmony export */   \"__wbindgen_rethrow\": () => (/* binding */ __wbindgen_rethrow)\n/* harmony export */ });\n/* harmony import */ var _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index_bg.wasm */ \"./pkg/index_bg.wasm\");\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__]);\n_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? await __webpack_async_dependencies__ : __webpack_async_dependencies__)[0];\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n* @returns {string}\n*/\nfunction hi() {\n    try {\n        const retptr = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.hi(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n*/\nclass JsCell {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(JsCell.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_jscell_free(ptr);\n    }\n    /**\n    */\n    get color() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_jscell_color(this.ptr);\n        return String.fromCodePoint(ret);\n    }\n    /**\n    * @param {string} arg0\n    */\n    set color(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_jscell_color(this.ptr, arg0.codePointAt(0));\n    }\n    /**\n    */\n    get symbol() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_jscell_symbol(this.ptr);\n        return String.fromCodePoint(ret);\n    }\n    /**\n    * @param {string} arg0\n    */\n    set symbol(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_jscell_symbol(this.ptr, arg0.codePointAt(0));\n    }\n}\n/**\n*/\nclass JsRegion {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(JsRegion.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_jsregion_free(ptr);\n    }\n    /**\n    */\n    get x_min() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_jsregion_x_min(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x_min(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(arg0);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_jsregion_x_min(this.ptr, arg0);\n    }\n    /**\n    */\n    get y_min() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_jsregion_y_min(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y_min(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(arg0);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_jsregion_y_min(this.ptr, arg0);\n    }\n    /**\n    */\n    get x_max() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_jsregion_x_max(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x_max(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(arg0);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_jsregion_x_max(this.ptr, arg0);\n    }\n    /**\n    */\n    get y_max() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_jsregion_y_max(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y_max(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(arg0);\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_jsregion_y_max(this.ptr, arg0);\n    }\n}\n/**\n*/\nclass Program {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(Program.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_program_free(ptr);\n    }\n    /**\n    * @param {string} string\n    * @param {string} input\n    * @returns {Program}\n    */\n    static new(string, input) {\n        var ptr0 = passStringToWasm0(string, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(input, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.program_new(ptr0, len0, ptr1, len1);\n        return Program.__wrap(ret);\n    }\n    /**\n    * @returns {boolean | undefined}\n    */\n    step() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.program_step(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    * @returns {JsRegion}\n    */\n    grid_region() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.program_grid_region(this.ptr);\n        return JsRegion.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {JsCell | undefined}\n    */\n    grid_get(x, y) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(x);\n        _assertNum(y);\n        var ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.program_grid_get(this.ptr, x, y);\n        return ret === 0 ? undefined : JsCell.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    output() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.program_output(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_add_to_stack_pointer(16);\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(r0, r1);\n        }\n    }\n}\n\nfunction __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nfunction __wbindgen_rethrow(arg0) {\n    throw takeObject(arg0);\n};\n\n\n});\n\n//# sourceURL=webpack:///./pkg/index_bg.js?");

/***/ }),

/***/ "?4db5":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///fs_(ignored)?");

/***/ }),

/***/ "./pkg/index_bg.wasm":
/*!***************************!*\
  !*** ./pkg/index_bg.wasm ***!
  \***************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("var __webpack_instantiate__ = ([WEBPACK_IMPORTED_MODULE_0]) => {\n\treturn __webpack_require__.v(exports, module.id, \"84cb318a9a24375b30be\", {\n\t\t\"./index_bg.js\": {\n\t\t\t\"__wbindgen_string_new\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_string_new,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\t\"__wbindgen_rethrow\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_rethrow\n\t\t}\n\t});\n}\n__webpack_require__.a(module, (__webpack_handle_async_dependencies__) => {\n\t/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./index_bg.js */ \"./pkg/index_bg.js\");\n\tvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([WEBPACK_IMPORTED_MODULE_0]);\n\treturn __webpack_async_dependencies__.then ? __webpack_async_dependencies__.then(__webpack_instantiate__) : __webpack_instantiate__(__webpack_async_dependencies__);\n}, 1);\n\n//# sourceURL=webpack:///./pkg/index_bg.wasm?");

/***/ })

}]);